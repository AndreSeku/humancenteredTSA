"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[686],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(n),h=a,m=d["".concat(s,".").concat(h)]||d[h]||c[h]||i;return n?r.createElement(m,l(l({ref:t},u),{},{components:n})):r.createElement(m,l({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9390:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),l=["components"],o={sidebar_position:1},s="Flask-Webserver",p={unversionedId:"applications/flask-webserver",id:"applications/flask-webserver",isDocsHomePage:!1,title:"Flask-Webserver",description:"There is the possibility to run the hctsa-package as a Python-based backend, based on Flask. Hence, there is a REST API to use build up and run the pipeline. Therefore, it is possible to integrate the hctsa-package as a standalone backend-service into existing or new applications.",source:"@site/docs/applications/flask-webserver.md",sourceDirName:"applications",slug:"/applications/flask-webserver",permalink:"/humancenteredTSA/docs/applications/flask-webserver",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/applications/flask-webserver.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Rule Matrix",permalink:"/humancenteredTSA/docs/methods/rule-matrix"},next:{title:"... coming soon",permalink:"/humancenteredTSA/docs/applications/translate-your-site"}},u=[{value:"Start",id:"start",children:[]},{value:"REST API",id:"rest-api",children:[]}],c={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"flask-webserver"},"Flask-Webserver"),(0,i.kt)("p",null,"There is the possibility to run the ",(0,i.kt)("strong",{parentName:"p"},"hctsa"),"-package as a Python-based backend, based on Flask. Hence, there is a REST API to use build up and run the pipeline. Therefore, it is possible to integrate the ",(0,i.kt)("strong",{parentName:"p"},"hctsa"),"-package as a standalone backend-service into existing or new applications."),(0,i.kt)("h2",{id:"start"},"Start"),(0,i.kt)("p",null,"To start the Flask-webserver, you can use the Makefile and use the following command in your shell:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"make run\n")),(0,i.kt)("p",null,"The webserver can be accesses through ",(0,i.kt)("inlineCode",{parentName:"p"},"http://localhost:5000")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"http://0.0.0.0:5000"),"."),(0,i.kt)("h2",{id:"rest-api"},"REST API"),(0,i.kt)("p",null,"The existing endpoints are as follows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"http://0.0.0.0:5000/pipeline/rules"),": ")),(0,i.kt)("p",null,"GET; {} -> Get JSON with method rules - as described in the method_rules.yml"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"http://0.0.0.0:5000/pipeline/data"),": ")),(0,i.kt)("p",null,"GET/POST: {\u201efilename\u201c: \u201etest\u201c} -> loading the test data"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"http://0.0.0.0:5000/pipeline/add"),": ")),(0,i.kt)("p",null,"GET/POST: {\u201emethod\u201c: METHOD} -> adds METHOD into the pipeline; actually not working with the sns_methods for seaborn visualizations!"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"http://0.0.0.0:5000/pipeline/delete"),": ")),(0,i.kt)("p",null,"GET/POST {\u201eposition\u201c: INT} -> deletes the function at position INT, -1 would be the last function in the pipeline"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"http://0.0.0.0:5000/pipeline/run"),": ")),(0,i.kt)("p",null,"GET: {} -> Runs the pipeline. Gets a JSON of the resulting pd.Series or pd.DataFrame Object"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"http://0.0.0.0:5000/pipeline/reset"),": ")),(0,i.kt)("p",null,"GET: {} -> Resetting the pipeline and the data to an empty pipeline."))}d.isMDXComponent=!0}}]);